#ifndef __DEF_H_
#define __DEF_H_

#include "FormatOfEverything.h"
#include "BlastWave.h"

// 0 = AuAu, 1 = pAl, 2 = HeAu, 3 = CuAu, 4 = UU
int systN = 2;

double gAvgT;
double gAvgUt;
TH1D *hSpectra[6][12];
TGraphErrors *grSpectra[6][12];

// Названия систем столкновений
TString systNamesT[5] = {"AuAu", "pAl", "HeAu", "CuAu", "UU"};
string systNames[5] = {"AuAu", "pAl", "HeAu", "CuAu", "UU"};
int Ncentr[5] = {12, 4, 5, 5, 4};


const int MAX_CENTR = 20;                   // Максимальное число центральностей
const int MAX_PARTS = 6;                    // Максимальное число частиц
const int N_CENTR = 12;                      // Текущее число центральностей
const int N_PARTS = 6;                      // Текущее число частиц
const int N_SIGMA = 7;                      // Число сигм для контуров
const int PARTS[] = {0, 1, 2, 3, 4, 5};     // Индексы всех частиц
const int PARTS_POS[] = {0, 2, 4};          // Положительные частицы (π⁺, K⁺, p)
const int PARTS_NEG[] = {1, 3, 5};          // Отрицательные частицы (π⁻, K⁻, анти-p)
const int PARTS_ALL[] = {0, 1, 2, 3, 4, 5};


const int N_CENTR_SYST[5] = {12, 4, 5, 5, 4}; // Число центральностей для каждой системы 
const int CENTR_SYST[5][20] = {               // Конкретные центральности для систем
        {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}, // AuAu
        {0, 1, 2, 3},                           // pAl
        {0, 1, 2, 3, 4},                        // HeAu
        {0, 1, 2, 3, 4},                        // CuAu
        {0, 1, 2, 3},                           // UU
};


TGraphErrors *gr[2][5]; // [charge][system]
int SYSTS[] = {0, 1, 2, 3, 4};


TGraph *contour[MAX_PARTS][N_CENTR][N_SIGMA];
TF1 *ifuncx[MAX_PARTS][N_CENTR], *ifuncxGlobal[MAX_PARTS][N_CENTR];
double paramsGlobal[2][N_CENTR][5]; // [2] - charge, 5 - количество параметров 1) T 2) ut 3) const pi 4) const K 5) const p






string particles[6] = {"pip", "pim", "kp", "km", "p", "ap"};
string partTitles[6] = {"#pi^{+}", "#pi^{#minus}", "K^{+}", "K^{#minus}", "p", "#bar{p}"};
double masses[6] = {0.13957061, 0.13957061, 0.493667, 0.493667, 0.938272, 0.938272};
Color_t centrColors[12] = {kRed, kBlue, kGreen + 2, kBlack, kMagenta, kBlue+2, kBlack, kBlack, kBlack, kBlack, kBlack};
Color_t partColors[6] = {kRed, kRed, kBlue, kBlue, kGreen + 2, kGreen + 2};
string centrTitles[10] = {"0-10%", "10-20%", "20-30%", "30-40%", "40-60%", "60-80%"};
double centrX[12] = {46, 2.5, 7.5, 12.5, 17.5, 25, 35, 45, 55, 65, 75, 86};

string centrTitlesAuAu[MAX_CENTR] = {"Minimum bias", "0-5%", "5-10%", "10-15%", "15-20%", "20-30%", "30-40%", "40-50%", "50-60%", "60-70%", "70-80%", "80-92%"};
string centrTitlesUU_more[MAX_CENTR] = {"0-5%", "5-10%", "10-15%", "15-20%", "20-30%", "30-40%", "40-50%", "50-60%", "60-70%", "70-80%"};
double TAuAu[MAX_CENTR] = {132, 107.8, 109.8, 113.3, 116.5, 123, 132, 142, 153, 163, 168, 179};


// PHENIX
double Npart[5][MAX_CENTR] =
    {   
        {109.1, 351.4, 299.0, 253.9, 215.3, 166.6, 
         114.2, 74.4, 45.5, 25.7, 13.4, 6.3},      // AuAu
        {3.1, 4.35, 3.3, 2.7, 0},                  // pAl
        {11.34, 21.84, 15.38, 9.51, 4.87},         // HeAu
        {57.0, 154.8, 80.4, 34.9, 7.5},            // CuAu
        {330, 159.0, 61.6, 17.8},                  // UU
    };

TString NpartStr[5][MAX_CENTR] =
    {
        {"3.1", "4.35", "3.3", "2.7"},                    // pAl 
        {"11.34", "21.84", "15.38", "9.51", "4.87"},      // HeAu 
        {"57.0", "154.8", "80.4", "34.9", "7.5"},         // CuAu 
        {" --- ", "330", "159.0", "61.6", "17.8"},        // UU
        {"109.1", "351.4", "325.2", "299.0", "253.9", 
         "234.6", "215.3", "166.6", "114.2", "74.4 ", 
         "45.5 ", "25.7 ","19.5 ", "14.5 ", "13.4 ", 
         "9.5 ", "6.3 ", "14.5 "}                         // AuAu
    };

TString centrStr[5][MAX_CENTR] =
    {
        {"0-72%", "0-20%", "20-40%", "40-72%"},           // pAl
        {"0-88%", "0-20%", "20-40%", "40-60%", "60-88%"}, // HeAu
        {"0-80%", "0-20%", "20-40%", "40-60%", "60-80%"}, // CuAu
        {" --- ", "0-20%", "20-40%", "40-60%", "60-80%"}, // UU 
        {"MB", "0-10", "5-10", "10-15", 
         "10-20", "15-20", "20-30", "30-40", 
         "40-50", "50-60", "60-70", "60-80", 
         "60-92", "70-80", "70-92", "80-92", "60-92"}     // AuAu
    };

// ARTICLE
double T_AuAu_ART[MAX_CENTR] = {0.132,  0.1078, 0.1098, 0.1133, 0.1165, 0.123, 0.132, 0.142, 0.153, 0.163, 0.168, 0.179};
double beta_AuAu_ART[MAX_CENTR] = {0.71, 0.773, 0.769, 0.763, 0.754, 0.738, 0.71, 0.67, 0.614, 0.555, 0.497, 0.399};

// STAR
double T_AuAu_STAR[MAX_CENTR] = {0.089621, 0.091638, 0.099700, 0.102457, 0.109589, 0.108404, 0.115376, 0.118381, 0.129348};
double beta_AuAu_STAR[MAX_CENTR] = {0.592, 0.578, 0.559, 0.538, 0.514, 0.500, 0.456, 0.405, 0.356};
double Npart_AuAu_STAR[MAX_CENTR] = {351.515, 298.787, 233.939, 167.272, 115.757, 77.575, 49.090, 29.090, 15.151};

double T_UU_STAR[MAX_CENTR] = {0.092543, 0.094931, 0.099566, 0.105902, 0.110557, 0.114474, 0.121440, 0.128420, 0.134460};
double beta_UU_STAR[MAX_CENTR] = {0.569, 0.568, 0.553, 0.529, 0.494, 0.458, 0.421, 0.364, 0.306};
double Npart_UU_STAR[MAX_CENTR] = {414.9, 355.4, 277.5, 195.4, 133.1, 86.2, 52.6, 29.4, 14.7};







// =============== Для  BlastWave ======================

double xmin[] = {0.5, 0.5, 0.12, 0.4, 0.2, 0.12};
double xmax[] = {1., 1., 1, 1, 1, 1};


// Вычисление поперечной массы частицы
double GetMt( int part, double pT )
{
    return sqrt(pT * pT  + masses[part] * masses[part]) - masses[part];
}




// По центральностям
double T[] = {0.132,  0.1078, 0.1098, 0.1133, 0.1165, 0.123, 0.132, 0.142, 0.153, 0.163, 0.168, 0.179};
// double T[] = {0.1078, 0.1098, 0.1133, 0.1165, 0.123, 0.132, 0.142, 0.153, 0.163, 0.168, 0.179};

double Tmin[] = {0.06, 0.06, 0.06, 0.06, 0.06, 0.06};
double Tmax[] = {0.22, 0.22, 0.22, 0.22, 0.22, 0.22};

double betaAuAu[] = {0.71, 0.773, 0.769, 0.763, 0.754, 0.738, 0.71, 0.67, 0.614, 0.555, 0.497, 0.399};
// double betaAuAu[] = {0.773, 0.769, 0.763, 0.754, 0.738, 0.71, 0.67, 0.614, 0.555, 0.497, 0.399};

double beta_[MAX_CENTR] = {0.673, 0.769, 0.614, 0.497, 0.399};
double betamin[] = {0.1, 0.1, 0.1, 0.1, 0.1, 0.1};
double betamax[] = {0.9, 0.9, 0.8, 0.9, 0.9, 0.9};

float T0[5][5] =
    {
        {0.166599, 0.173437, 0.165711, 0.159519},           // pAl
        {0.189169, 0.193842, 0.189647, 0.185576, 0.179305}, // HeAu
        {0.159152, 0.162643, 0.159462, 0.162775, 0.159476}, // CuAu
        {0.171686, 0.172514, 0.176662, 0.186995},           // UU
        {0.177, 0.179, 0.173}                               // AuAu 0-5%, 40-50%, 60-92%
    };
double TCuAu[5] = {0.159152, 0.162643, 0.159462, 0.162775, 0.159476};
double TUU[4] = {0.186995, 0.176662, 0.172514, 0.171686};
float ut[5][5] =
    {
        {0.0889885, 0.0825347, 0.0898532, 0.0955403, 0 },
        {  0.110009, 0.117967, 0.110902, 0.09765, 0.0741889},
        { 0.199316, 0.195991, 0.198903, 0.154026, 0.120129},
        { 0.19003, 0.191255, 0.151969, 0.0772427, 0},
        {0.48*0.48, 0.4*0.4, 0.32*0.32},
    };
float betaCuAu[5] = {0.199316, 0.195991, 0.198903, 0.154026, 0.120129}; 
float betaUU[5] = { 0.19003, 0.191255, 0.151969, 0.0772427, 0};
// По частицам
// AuAu
double con[6] = {100.0, 100.0, 50.0, 5000, 5000, 5000};
double conmin[] = {0, 0, 0, 3000, 3000, 3000};
double conmax[] = {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000};
// pAl, HeAu, CuAu
// double con[]    = {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000};  
// double conmin[] = {0, 0, 0, 0, 0, 0};
// double conmax[] = {30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000};

// Для GlobalFit
// AuAu
// double conGlobal[]    = {0, 0, 0, 0, 0, 0};  
// double conminGlobal[] = {0.1, 0.1, 0.1, 0.1, 0.1, 0.1};
// double conmaxGlobal[] = {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000};

// pAl, HeAu, CuAu
double conGlobal[]    = {100, 100, 120, 60, 0.01, 0.01};  
double conminGlobal[] = {0, 0, 0, 0, 0, 0};
double conmaxGlobal[] = {5000, 5000, 5000, 5000, 5000, 5000};

// Поиск констант вручную
double handT[] = {0.132,  0.1078, 0.1098, 0.1133, 0.1165, 0.123, 0.132, 0.142, 0.153, 0.163, 0.168, 0.179};
double handBeta[] = {0.71, 0.773, 0.769, 0.763, 0.754, 0.738, 0.71, 0.67, 0.614, 0.555, 0.497, 0.399};

// AuAu
// double handConst[MAX_PARTS][MAX_CENTR] = 
//     {
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//     };

// pAl, HeAu
// double handConst[MAX_PARTS][MAX_CENTR] = 
//     {
//         {0.5, 1, 0.75, 0.50, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {0.5, 1, 0.75, 0.50, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {0.3, 1, 0.75, 0.50, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {0.3, 1, 0.75, 0.50, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {3, 14, 8, 5, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//         {2, 12, 7, 4, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
//     };

// CuAu
double handConst[MAX_PARTS][MAX_CENTR] = 
    {
        {12, 30, 14, 5, 1.8, 4, 4, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        {12, 30, 14, 5, 1.8, 4, 4, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        {12, 30, 14, 5, 1, 4, 4, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        {10, 77, 34, 10, 2.3, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        {55, 900, 350, 100, 10, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        {55, 900, 350, 100, 10, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},

        // {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
        // {10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000},
    };

double constPar[N_PARTS][N_CENTR], 
       Tpar[N_PARTS][N_CENTR], Tpar_err[N_PARTS][N_CENTR], 
       utPar[N_PARTS][N_CENTR], utPar_err[N_PARTS][N_CENTR], 
       Tpar_sys[N_PARTS][N_CENTR], utPar_sys[N_PARTS][N_CENTR];




// =============================== TRASH =================================== // 

double paramsGlobalAllParts[N_CENTR][5];




#endif /* __DEF_H_ */